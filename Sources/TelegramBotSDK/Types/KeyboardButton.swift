// Telegram Bot SDK for Swift (unofficial).
// This file is autogenerated by API/generate_wrappers.rb script.

import Foundation


/// This object represents one button of the reply keyboard. For simple text buttons String can be used instead of this object to specify text of the button. Optional fields are mutually exclusive.
///
/// - SeeAlso: <https://core.telegram.org/bots/api#keyboardbutton>

public struct KeyboardButton: JsonConvertible, InternalJsonConvertible {
    /// Original JSON for fields not yet added to Swift structures.
    public var json: Any {
        get {
            return internalJson.object
        }
        set {
            internalJson = JSON(newValue)
        }
    }
    internal var internalJson: JSON

    /// Text of the button. If none of the optional fields are used, it will be sent as a message when the button is pressed
    public var text: String {
        get { return internalJson["text"].stringValue }
        set { internalJson["text"].stringValue = newValue }
    }

    /// Optional. If True, the user's phone number will be sent as a contact when the button is pressed. Available in private chats only
    public var requestContact: Bool? {
        get { return internalJson["request_contact"].bool }
        set { internalJson["request_contact"].bool = newValue }
    }

    /// Optional. If True, the user's current location will be sent when the button is pressed. Available in private chats only
    public var requestLocation: Bool? {
        get { return internalJson["request_location"].bool }
        set { internalJson["request_location"].bool = newValue }
    }

    internal init(internalJson: JSON = [:]) {
        self.internalJson = internalJson
    }
    public init(json: Any) {
        self.internalJson = JSON(json)
    }
    public init(data: Data) {
        self.internalJson = JSON(data: data)
    }
}
