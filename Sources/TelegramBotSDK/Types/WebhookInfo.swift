// Telegram Bot SDK for Swift (unofficial).
// This file is autogenerated by API/generate_wrappers.rb script.

import Foundation


/// Contains information about the current status of a webhook.
///
/// - SeeAlso: <https://core.telegram.org/bots/api#webhookinfo>

public struct WebhookInfo: JsonConvertible, InternalJsonConvertible {
    /// Original JSON for fields not yet added to Swift structures.
    public var json: Any {
        get {
            return internalJson.object
        }
        set {
            internalJson = JSON(newValue)
        }
    }
    internal var internalJson: JSON

    /// Webhook URL, may be empty if webhook is not set up
    public var url: String {
        get { return internalJson["url"].stringValue }
        set { internalJson["url"].stringValue = newValue }
    }

    /// True, if a custom certificate was provided for webhook certificate checks
    public var hasCustomCertificate: Bool {
        get { return internalJson["has_custom_certificate"].boolValue }
        set { internalJson["has_custom_certificate"].boolValue = newValue }
    }

    /// Number of updates awaiting delivery
    public var pendingUpdateCount: Int {
        get { return internalJson["pending_update_count"].intValue }
        set { internalJson["pending_update_count"].intValue = newValue }
    }

    /// Optional. Unix time for the most recent error that happened when trying to deliver an update via webhook
    public var lastErrorDate: Date? {
        get {
            guard let date = internalJson["last_error_date"].double else { return nil }
            return Date(timeIntervalSince1970: date)
        }
        set {
            internalJson["last_error_date"].double = newValue?.timeIntervalSince1970
        }
    }

    /// Optional. Error message in human-readable format for the most recent error that happened when trying to deliver an update via webhook
    public var lastErrorMessage: String? {
        get { return internalJson["last_error_message"].string }
        set { internalJson["last_error_message"].string = newValue }
    }

    /// Optional. Maximum allowed number of simultaneous HTTPS connections to the webhook for update delivery
    public var maxConnections: Int? {
        get { return internalJson["max_connections"].int }
        set { internalJson["max_connections"].int = newValue }
    }

    /// Optional. A list of update types the bot is subscribed to. Defaults to all update types
    public var allowedUpdates: [String] {
        get { return internalJson["allowed_updates"].customArrayValue() }
        set { internalJson["allowed_updates"] = newValue.isEmpty ? JSON.null : JSON.initFrom(newValue) }
    }

    internal init(internalJson: JSON = [:]) {
        self.internalJson = internalJson
    }
    public init(json: Any) {
        self.internalJson = JSON(json)
    }
    public init(data: Data) {
        self.internalJson = JSON(data: data)
    }
}
